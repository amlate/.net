@model Project.Domain.Entities.UserProfile.Voucher

@{
    ViewBag.Title = "优惠券管理";
    ViewBag.Top = "优惠券管理";
}

<div class="container">
    @using (Html.BeginForm("Generate", "Voucher", FormMethod.Post, new {@class = "form-horizontal"}))
    {
        @Html.AntiForgeryToken()

        <div class="form-group"></div>
        <div class="form-group">
            <label for="Name" class="col-sm-2 control-label">代金券名称</label>
            <div class="col-sm-4">
                @Html.TextBoxFor(model => model.Name, new {@class = "form-control", placeholder = "请输入代金券类别名称"})
            </div>
        </div>

        <div class="form-group">
            <label for="agency" class="col-sm-2 control-label">代金券 - 代理商</label>
            <div class="col-sm-4">
                @Html.DropDownListFor(model => model.AgencyId, (IEnumerable<SelectListItem>)ViewBag.Agencies, new Dictionary<string, object>() { { "class", "selectpicker show-tick form-control" }, { "data-live-search", "true" } })
            </div>
        </div>

        <div class="form-group">
            <label for="agency" class="col-sm-2 control-label">代金券所属活动</label>
            <div class="col-sm-4">
                @Html.DropDownListFor(model => model.EventId, (IEnumerable<SelectListItem>)ViewBag.Events, new Dictionary<string, object>() { { "class", "selectpicker show-tick form-control" }, { "data-live-search", "true" } })
            </div>
        </div>

        <div class="form-group">
            <label for="Desc" class="col-sm-2 control-label">代金券描述</label>
            <div class="col-sm-4">
                @Html.TextBoxFor(model => model.Desc, new {@class = "form-control", placeholder = "请输入描述"})
            </div>
        </div>


        <div class="form-group">
            <label for="Amount" class="col-sm-2 control-label">代金券使用金额(整数或者两位小数的数字)</label>
            <div class="col-sm-4">
                @Html.TextBoxFor(model => model.PriceToUse, new { @class = "form-control", placeholder = "请输入代金券使用金额" })
            </div>
        </div>

        <div class="form-group">
            <label for="Amount" class="col-sm-2 control-label">金额(整数或者两位小数的数字)</label>
            <div class="col-sm-4">
                @Html.TextBoxFor(model => model.Amount, new { @class = "form-control", placeholder = "请输入代金券金额" })
            </div>
        </div>

        <div class="form-group">
            <label for="nums" class="col-sm-2 control-label">生成数目</label>
            <div class="col-sm-4">
                <input type="text" id="nums" name="nums" class="form-control" placeholder="请输入生成数目" />
            </div>
        </div>

        <div class="form-group">
            <label for="Desc" class="col-sm-2 control-label">代金券有效期</label>

            <div class="col-sm-2">
                @Html.TextBoxFor(model => model.StartTime, new { @class = "form-control", @readonly = "readonly" })
            </div>
            <div class="col-sm-2">
                @Html.TextBoxFor(model => model.EndTime, new { @class = "form-control", @readonly = "readonly" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
                <button type="submit" class="btn btn-default">保 存</button>
            </div>
        </div>
    }
</div>

@section Scripts{
    <script src="~/Scripts/laydate/laydate.js"></script>
    <script>
        var start = {
            elem: '#StartTime',
            format: 'YYYY-MM-DD hh:mm:ss',
            min: laydate.now(), //设定最小日期为当前日期
            max: '2099-06-16 23:59:59', //最大日期
            istime: true,
            istoday: false,
            choose: function (datas) {
                end.min = datas; //开始日选好后，重置结束日的最小日期
                end.start = datas; //将结束日的初始值设定为开始日
            }
        };
        var end = {
            elem: '#EndTime',
            format: 'YYYY-MM-DD hh:mm:ss',
            min: laydate.now(),
            max: '2099-06-16 23:59:59',
            istime: true,
            istoday: false,
            choose: function (datas) {
                start.max = datas; //结束日选好后，重置开始日的最大日期
            }
        };
        laydate(start);
        laydate(end);
    </script>
}